; ModuleID = 'main.cpp'
source_filename = "main.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.BlinkLed = type <{ i32, i32, i32, i8, [3 x i8] }>
%class.Timer = type { i8 }
%struct.SysTick_Type = type { i32, i32, i32, i32 }
%struct.SCB_Type = type { i32, i32, i32, i32, i32, i32, [12 x i8], i32, i32, i32, i32, i32, i32, i32, [2 x i32], i32, i32, [4 x i32], [5 x i32], [5 x i32], i32 }
%struct.NVIC_Type = type { [8 x i32], [24 x i32], [8 x i32], [24 x i32], [8 x i32], [24 x i32], [8 x i32], [24 x i32], [8 x i32], [56 x i32], [240 x i8], [644 x i32], i32 }

$_ZN5Timer5startEv = comdat any

@blinkLeds = global [4 x %class.BlinkLed] zeroinitializer, align 16
@.str = private unnamed_addr constant [13 x i8] c"version: %d\0A\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"Hello ARM World!\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"System clock: %u Hz\0A\00", align 1
@SystemCoreClock = external global i32, align 4
@.str.3 = private unnamed_addr constant [8 x i8] c"Ready!\0A\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"number %u\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_main.cpp, i8* null }]

; Function Attrs: noinline nounwind uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZN8BlinkLedC1Ejjb(%class.BlinkLed* getelementptr inbounds ([4 x %class.BlinkLed], [4 x %class.BlinkLed]* @blinkLeds, i64 0, i64 0), i32 3, i32 12, i1 zeroext false)
  call void @_ZN8BlinkLedC1Ejjb(%class.BlinkLed* getelementptr inbounds ([4 x %class.BlinkLed], [4 x %class.BlinkLed]* @blinkLeds, i64 0, i64 1), i32 3, i32 13, i1 zeroext false)
  call void @_ZN8BlinkLedC1Ejjb(%class.BlinkLed* getelementptr inbounds ([4 x %class.BlinkLed], [4 x %class.BlinkLed]* @blinkLeds, i64 0, i64 2), i32 3, i32 14, i1 zeroext false)
  call void @_ZN8BlinkLedC1Ejjb(%class.BlinkLed* getelementptr inbounds ([4 x %class.BlinkLed], [4 x %class.BlinkLed]* @blinkLeds, i64 0, i64 3), i32 3, i32 15, i1 zeroext false)
  ret void
}

declare void @_ZN8BlinkLedC1Ejjb(%class.BlinkLed*, i32, i32, i1 zeroext) unnamed_addr #1

; Function Attrs: noinline norecurse nounwind optnone uwtable
define i32 @main(i32, i8**) #2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %class.Timer, align 1
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %14 = call i32 @_Z5adderii(i32 3, i32 5)
  store i32 %14, i32* %7, align 4
  %15 = load i32, i32* %7, align 4
  %16 = sdiv i32 %15, 2
  store i32 %16, i32* %6, align 4
  %17 = load i32, i32* %7, align 4
  %18 = call i32 (i8*, ...) @trace_printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 %17)
  %19 = load i32, i32* %6, align 4
  %20 = call i32 (i8*, ...) @trace_printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i32 %19)
  %21 = call i32 @trace_puts(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0))
  %22 = load i32, i32* @SystemCoreClock, align 4
  %23 = call i32 (i8*, ...) @trace_printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i32 0, i32 0), i32 %22)
  call void @_ZN5Timer5startEv(%class.Timer* %8)
  store i64 0, i64* %9, align 8
  br label %24

; <label>:24:                                     ; preds = %30, %2
  %25 = load i64, i64* %9, align 8
  %26 = icmp ult i64 %25, 4
  br i1 %26, label %27, label %33

; <label>:27:                                     ; preds = %24
  %28 = load i64, i64* %9, align 8
  %29 = getelementptr inbounds [4 x %class.BlinkLed], [4 x %class.BlinkLed]* @blinkLeds, i64 0, i64 %28
  call void @_ZN8BlinkLed7powerUpEv(%class.BlinkLed* %29)
  br label %30

; <label>:30:                                     ; preds = %27
  %31 = load i64, i64* %9, align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* %9, align 8
  br label %24

; <label>:33:                                     ; preds = %24
  store i32 0, i32* %10, align 4
  store i64 0, i64* %11, align 8
  br label %34

; <label>:34:                                     ; preds = %40, %33
  %35 = load i64, i64* %11, align 8
  %36 = icmp ult i64 %35, 4
  br i1 %36, label %37, label %43

; <label>:37:                                     ; preds = %34
  %38 = load i64, i64* %11, align 8
  %39 = getelementptr inbounds [4 x %class.BlinkLed], [4 x %class.BlinkLed]* @blinkLeds, i64 0, i64 %38
  call void @_ZN8BlinkLed6turnOnEv(%class.BlinkLed* %39)
  br label %40

; <label>:40:                                     ; preds = %37
  %41 = load i64, i64* %11, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %11, align 8
  br label %34

; <label>:43:                                     ; preds = %34
  call void @_ZN5Timer5sleepEj(%class.Timer* %8, i32 1000)
  store i64 0, i64* %12, align 8
  br label %44

; <label>:44:                                     ; preds = %50, %43
  %45 = load i64, i64* %12, align 8
  %46 = icmp ult i64 %45, 4
  br i1 %46, label %47, label %53

; <label>:47:                                     ; preds = %44
  %48 = load i64, i64* %12, align 8
  %49 = getelementptr inbounds [4 x %class.BlinkLed], [4 x %class.BlinkLed]* @blinkLeds, i64 0, i64 %48
  call void @_ZN8BlinkLed7turnOffEv(%class.BlinkLed* %49)
  br label %50

; <label>:50:                                     ; preds = %47
  %51 = load i64, i64* %12, align 8
  %52 = add i64 %51, 1
  store i64 %52, i64* %12, align 8
  br label %44

; <label>:53:                                     ; preds = %44
  call void @_ZN5Timer5sleepEj(%class.Timer* %8, i32 250)
  %54 = call i32 (i8*, ...) @trace_printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0))
  store i64 0, i64* %13, align 8
  br label %55

; <label>:55:                                     ; preds = %63, %53
  %56 = load i64, i64* %13, align 8
  %57 = load i32, i32* %6, align 4
  %58 = sext i32 %57 to i64
  %59 = icmp ult i64 %56, %58
  br i1 %59, label %60, label %66

; <label>:60:                                     ; preds = %55
  call void @_ZN8BlinkLed6turnOnEv(%class.BlinkLed* getelementptr inbounds ([4 x %class.BlinkLed], [4 x %class.BlinkLed]* @blinkLeds, i64 0, i64 0))
  call void @_ZN5Timer5sleepEj(%class.Timer* %8, i32 750)
  call void @_ZN8BlinkLed7turnOffEv(%class.BlinkLed* getelementptr inbounds ([4 x %class.BlinkLed], [4 x %class.BlinkLed]* @blinkLeds, i64 0, i64 0))
  call void @_ZN5Timer5sleepEj(%class.Timer* %8, i32 250)
  %61 = load i64, i64* %13, align 8
  %62 = call i32 (i8*, ...) @trace_printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i32 0, i32 0), i64 %61)
  br label %63

; <label>:63:                                     ; preds = %60
  %64 = load i64, i64* %13, align 8
  %65 = add i64 %64, 1
  store i64 %65, i64* %13, align 8
  br label %55

; <label>:66:                                     ; preds = %55
  %67 = load i32, i32* %3, align 4
  ret i32 %67
}

declare i32 @_Z5adderii(i32, i32) #1

declare i32 @trace_printf(i8*, ...) #1

declare i32 @trace_puts(i8*) #1

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr void @_ZN5Timer5startEv(%class.Timer*) #3 comdat align 2 {
  %2 = alloca %class.Timer*, align 8
  store %class.Timer* %0, %class.Timer** %2, align 8
  %3 = load %class.Timer*, %class.Timer** %2, align 8
  %4 = load i32, i32* @SystemCoreClock, align 4
  %5 = udiv i32 %4, 1000
  %6 = call i32 @_ZL14SysTick_Configj(i32 %5)
  ret void
}

declare void @_ZN8BlinkLed7powerUpEv(%class.BlinkLed*) #1

declare void @_ZN8BlinkLed6turnOnEv(%class.BlinkLed*) #1

declare void @_ZN5Timer5sleepEj(%class.Timer*, i32) #1

declare void @_ZN8BlinkLed7turnOffEv(%class.BlinkLed*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @_ZL14SysTick_Configj(i32) #3 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = zext i32 %4 to i64
  %6 = sub i64 %5, 1
  %7 = icmp ugt i64 %6, 16777215
  br i1 %7, label %8, label %9

; <label>:8:                                      ; preds = %1
  store i32 1, i32* %2, align 4
  br label %14

; <label>:9:                                      ; preds = %1
  %10 = load i32, i32* %3, align 4
  %11 = zext i32 %10 to i64
  %12 = sub i64 %11, 1
  %13 = trunc i64 %12 to i32
  store volatile i32 %13, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i64 3758153744 to %struct.SysTick_Type*), i32 0, i32 1), align 4
  call void @_ZL16NVIC_SetPriority9IRQn_Typej(i32 -1, i32 15)
  store volatile i32 0, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i64 3758153744 to %struct.SysTick_Type*), i32 0, i32 2), align 4
  store volatile i32 7, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i64 3758153744 to %struct.SysTick_Type*), i32 0, i32 0), align 4
  store i32 0, i32* %2, align 4
  br label %14

; <label>:14:                                     ; preds = %9, %8
  %15 = load i32, i32* %2, align 4
  ret i32 %15
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @_ZL16NVIC_SetPriority9IRQn_Typej(i32, i32) #3 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %3, align 4
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %7, label %17

; <label>:7:                                      ; preds = %2
  %8 = load i32, i32* %4, align 4
  %9 = shl i32 %8, 4
  %10 = and i32 %9, 255
  %11 = trunc i32 %10 to i8
  %12 = load i32, i32* %3, align 4
  %13 = zext i32 %12 to i64
  %14 = and i64 %13, 15
  %15 = sub i64 %14, 4
  %16 = getelementptr inbounds [12 x i8], [12 x i8]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i64 3758157056 to %struct.SCB_Type*), i32 0, i32 6), i64 0, i64 %15
  store volatile i8 %11, i8* %16, align 1
  br label %25

; <label>:17:                                     ; preds = %2
  %18 = load i32, i32* %4, align 4
  %19 = shl i32 %18, 4
  %20 = and i32 %19, 255
  %21 = trunc i32 %20 to i8
  %22 = load i32, i32* %3, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds [240 x i8], [240 x i8]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i64 3758153984 to %struct.NVIC_Type*), i32 0, i32 10), i64 0, i64 %23
  store volatile i8 %21, i8* %24, align 1
  br label %25

; <label>:25:                                     ; preds = %17, %7
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @_GLOBAL__sub_I_main.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline norecurse nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 5.0.0 (tags/RELEASE_500/final)"}
